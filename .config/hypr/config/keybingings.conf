# .-.          .-. .-.                     
# : :         .' `.: :.-.                  
# : `-.  .--. `. .': `'.' .--. .-..-. .--. 
# : .. :' .; : : : : . `.' '_.': :; :`._-.'
# :_;:_;`.__.' :_; :_;:_;`.__.'`._. ;`.__.'
#                               .-. :      
#                               `._.'      
# ============================================================

# See https://wiki.hyprland.org/Configuring/Keywords/ for more
$mainMod = SUPER
$mainShiftMod = SUPER_SHIFT
$mainCtrlMod = SUPER_CTRL

# Disable Middle Click paste
# bind = , mouse:274, exec, 

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, T, exec, $term
bind = $mainMod, F, exec, $browser
bind = $mainMod, E, exec, $filemanager
bind = $mainMod, A, exec, $applications 
bind = $mainMod, Q, killactive, 
bind = $mainMod, P, pseudo, # dwindle
# bind = $mainMod, J, togglesplit, # dwindle
# bind = $mainMod, M, exec, exit, 
bind = $mainMod, M, exec, swww kill, exit, 
bind = $mainMod, W, togglefloating
bind = $mainMod SHIFT, W, workspaceopt, allfloat
bind = $mainMod, V, exec, cliphist list | rofi -dmenu | cliphist decode | wl-copy
bind = $mainMod, N, exec, notify-send -u normal -t 60000 "Test Notification!" "This is a test notification, it will only appear once."
bind = $mainMod, C, exec, hyprpicker -a

bind = $mainMod, escape, exec, $SCRIPTS/ags/ags_bar_toggle

# временное решение 
# bind = $mainShiftMod, P, exec, hyprctl keyword monitor "eDP-1,disable"
# bind = $mainShiftMod, O, exec, hyprctl keyword monitor "eDP-1,2560x1600@120,0x0,1.33"
bind = $mainShiftMod, P, exec, $SCRIPTS/hypr/monitor_laptop_toggle
bind = $mainShiftMod, X, exec, $SCRIPTS/hypr/animation_toggle
bind = $mainShiftMod, escape, exec, $SCRIPTS/ags/ags_restart

bind = , F11, exec, amixer -D pulse sset Master 5%-
bind = , F12, exec, amixer -D pulse sset Master 5%+ unmute
# TODO: run script in script
# INFO: не отсвечивает в audio.speaker.is_muted в AGS
# bind = ,XF86AudioMute, exec, amixer -D pulse sset Master toggle  
bind = , XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bind = , XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bind = , XF86AudioRaiseVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+
# bind = , XF86AudioRaiseVolume, exec,sh -c "VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -o -E '[0-9]+\.[0-9]+' | awk '{print int($1 * 100)}'); if [[ int($VOLUME) < 101 ]] ; then wpctl set-volume @DEFAULT_SINK@ 5%+; fi"
# bind = , XF86AudioRaiseVolume, exec,sh -c "VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | grep -o -E '[0-9]+\.[0-9]+' | awk '{print $1 * 100'); if [ -n \"$VOLUME\" ] && [ $VOLUME -lt 95 ]; then wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+; fi"
# bind = , XF86AudioLowerVolume, exec, sh -c 'VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk "{print $2}" | cut -d. -f2); if [ $VOLUME -gt 0 ]; then wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-; fi'
# bind = , XF86AudioRaiseVolume, exec, sh -c 'VOLUME=$(wpctl get-volume @DEFAULT_AUDIO_SINK@ | awk "{print $2}" | cut -d. -f2); if [ $VOLUME -ne 0 ]; then wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+; fi'

bind = , XF86MonBrightnessUp, exec, brightnessctl set 10%+
bind = , XF86MonBrightnessDown, exec, brightnessctl set 10%-

# exec-once = hyprctl hyprpaper preload "/home/zh/Downloads/wallpapers/wallhaven-vqr1lp.png" & hyprctl hyprpaper wallpaper "eDP-1,/home/zh/Downloads/wallpapers/wallhaven-vqr1lp.png"

# Brightness keys
# bindl = ,XF86MonBrightnessDown, exec, brightness -dec
# bindl = ,XF86MonBrightnessUp, exec, brightness -inc
# Volume keys
# bindl = ,XF86AudioMute, exec, vol -mute
# bindl = ,XF86AudioLowerVolume, exec, vol -dec
# bindl = ,XF86AudioRaiseVolume, exec, vol -inc
# Player keys
# bindl=, XF86AudioPlay, exec, playerctl play-pause
# bindl=, XF86AudioNext, exec, playerctl next
# bindl=, XF86AudioPrev, exec, playerctl previous

# Move focus with mainMod + arrow keys
bind = $mainMod, left, movefocus, l
bind = $mainMod, right, movefocus, r
bind = $mainMod, up, movefocus, u
bind = $mainMod, down, movefocus, d
bind = $mainMod, h, movefocus, l
bind = $mainMod, l, movefocus, r
bind = $mainMod, k, movefocus, u
bind = $mainMod, j, movefocus, d
bind = $mainCtrlMod, h, movefocus, l
bind = $mainCtrlMod, l, movefocus, r
bind = $mainCtrlMod, k, movefocus, u
bind = $mainCtrlMod, j, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_down, workspace, e+1
bind = $mainMod, mouse_up, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow
